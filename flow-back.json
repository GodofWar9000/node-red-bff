[
    {
        "id": "27958b14.b63424",
        "type": "tab",
        "label": "Call Patient",
        "disabled": false,
        "info": ""
    },
    {
        "id": "2863068b.c6cf2a",
        "type": "tab",
        "label": "Query backend",
        "disabled": false,
        "info": ""
    },
    {
        "id": "aa0f12dc.254",
        "type": "tab",
        "label": "Twilio Status",
        "disabled": false,
        "info": ""
    },
    {
        "id": "14e26bdf.84eb54",
        "type": "subflow",
        "name": "JWT token",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 50,
                "y": 30,
                "wires": [
                    {
                        "id": "512ce512.cf408c"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 720,
                "y": 180,
                "wires": [
                    {
                        "id": "70da0653.035f88",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "d3a9ee05.39e6c",
        "type": "mongodb3",
        "z": "",
        "uri": "mongodb://doctor-at-home-backend-db.mongo.cosmos.azure.com:10255/doctor-at-home-backend-db?ssl=true&replicaSet=globaldb&retrywrites=false&maxIdleTimeMS=120000&appName=@doctor-at-home-backend-db@",
        "name": "Azure CosmosDB",
        "options": "",
        "parallelism": "-1"
    },
    {
        "id": "3a1bfe7f.176b02",
        "type": "inject",
        "z": "27958b14.b63424",
        "name": "",
        "topic": "",
        "payload": "{\"_id\":\"09e6fb7f-9b57-4eb6-b1cb-de721e60889c\"}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 90,
        "y": 200,
        "wires": [
            [
                "7ce483c0.c63f9c"
            ]
        ]
    },
    {
        "id": "3e46be60.a6fee2",
        "type": "http in",
        "z": "27958b14.b63424",
        "name": "",
        "url": "v1/patient-call",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 120,
        "wires": [
            [
                "7ce483c0.c63f9c"
            ]
        ]
    },
    {
        "id": "c1828065.d4676",
        "type": "function",
        "z": "27958b14.b63424",
        "name": "merge defaults, build request",
        "func": "\n// API info from global setings, msg.url is constructed here\nvar t = global.get('twilio')\nmsg.url = \"https://\"+t.accountSid+\":\"+t.authToken+\"@studio.twilio.com/v1/Flows/\"+t.flowId+\"/Executions\";\nmsg.headers = {}\nmsg.headers['content-type'] = \"application/x-www-form-urlencoded\"\n\n//  patient will be passed as context parameters into twilio flow\nvar p = msg.payload[0]; // we only have a single patient\nmsg.patient  = {\n    id: p._id,\n    fullname: p.name,\n    language: p.language,\n    phone: \"+41 79 342 123 9\", //p.phone, FIXME: global switch to reroute all to test number\n    clinicianID: p.clinicianID,\n    age: p.age,\n    preconditions: p.preconditions,\n    under_observation: p.under_observation,\n    from: msg.payload.from || \"+1 717 727 2384\", // FIXME: global setting\n}\n\n\n\n// Twilio Execution Payload\n// https://www.twilio.com/docs/studio/rest-api/execution\nmsg.payload = {\n    From: msg.patient.from,\n    To: msg.patient.phone,\n    Parameters: JSON.stringify (msg.patient)\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 700,
        "y": 200,
        "wires": [
            [
                "2968f70f.300848",
                "f36c254d.648ad8"
            ]
        ]
    },
    {
        "id": "6de06b94.8e48a4",
        "type": "http response",
        "z": "27958b14.b63424",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1050,
        "y": 220,
        "wires": []
    },
    {
        "id": "2968f70f.300848",
        "type": "debug",
        "z": "27958b14.b63424",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 690,
        "y": 300,
        "wires": []
    },
    {
        "id": "f36c254d.648ad8",
        "type": "http request",
        "z": "27958b14.b63424",
        "d": true,
        "name": "Twilio Execution ",
        "method": "POST",
        "ret": "obj",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 940,
        "y": 140,
        "wires": [
            [
                "6de06b94.8e48a4"
            ]
        ]
    },
    {
        "id": "7ce483c0.c63f9c",
        "type": "change",
        "z": "27958b14.b63424",
        "name": "twilio settings(NOTE: move to env)",
        "rules": [
            {
                "t": "set",
                "p": "twilio",
                "pt": "global",
                "to": "{\"accountSid\":\"AC31d737591a89007c25a1d99e15b2c315\",\"authToken\":\"5e3b27b0480cd63a9d2c7d5d866bc972\",\"flowId\":\"FW0991cb8593cbb9495103c1be76da95a2\",\"outboundNumber\":\"+1 717 727 2384\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 200,
        "wires": [
            [
                "c6c3496a.6ceaf8"
            ]
        ]
    },
    {
        "id": "322abc1c.1d5d04",
        "type": "debug",
        "z": "2863068b.c6cf2a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 630,
        "y": 160,
        "wires": []
    },
    {
        "id": "b5c2bf4f.7a236",
        "type": "inject",
        "z": "2863068b.c6cf2a",
        "name": "",
        "topic": "",
        "payload": "{\"_id\":\"09e6fb7f-9b57-4eb6-b1cb-de721e60889c\"}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 100,
        "y": 60,
        "wires": [
            [
                "9ffeea17.9b5878"
            ]
        ]
    },
    {
        "id": "c6c3496a.6ceaf8",
        "type": "mongodb3 in",
        "z": "27958b14.b63424",
        "service": "_ext_",
        "configNode": "d3a9ee05.39e6c",
        "name": "find patient by _id",
        "collection": "PatientDTO",
        "operation": "find.toArray",
        "x": 310,
        "y": 260,
        "wires": [
            [
                "3428e9b9.b32d96"
            ]
        ]
    },
    {
        "id": "3428e9b9.b32d96",
        "type": "switch",
        "z": "27958b14.b63424",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 490,
        "y": 260,
        "wires": [
            [
                "c1828065.d4676"
            ],
            [
                "e65ed276.b01e1"
            ]
        ]
    },
    {
        "id": "e65ed276.b01e1",
        "type": "function",
        "z": "27958b14.b63424",
        "name": "patient not found",
        "func": "msg.payload = {\n    error: \"true\",\n    message: \"Patient not found \"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 650,
        "y": 380,
        "wires": [
            [
                "6de06b94.8e48a4",
                "2968f70f.300848"
            ]
        ]
    },
    {
        "id": "22983094.dfadc",
        "type": "inject",
        "z": "27958b14.b63424",
        "name": "invalid id",
        "topic": "",
        "payload": "{\"_id\":\"09e6fb7f-9b57-XXXX-b1cb-de721e60889c\"}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 80,
        "y": 260,
        "wires": [
            [
                "7ce483c0.c63f9c"
            ]
        ]
    },
    {
        "id": "9ca6ccdb.9185a",
        "type": "http request",
        "z": "2863068b.c6cf2a",
        "name": "GET Clinicians",
        "method": "GET",
        "ret": "obj",
        "paytoqs": false,
        "url": "{{{settings.apiRoot}}}/v0/clinicians",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 440,
        "y": 240,
        "wires": [
            [
                "322abc1c.1d5d04",
                "2dc60b43.8df634"
            ]
        ]
    },
    {
        "id": "efe1ae4e.c83fd",
        "type": "http in",
        "z": "2863068b.c6cf2a",
        "name": "",
        "url": "/v1/clinicians",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 300,
        "wires": [
            [
                "9ffeea17.9b5878"
            ]
        ]
    },
    {
        "id": "2dc60b43.8df634",
        "type": "http response",
        "z": "2863068b.c6cf2a",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 690,
        "y": 280,
        "wires": []
    },
    {
        "id": "6305c76e.1d0788",
        "type": "function",
        "z": "14e26bdf.84eb54",
        "name": "prepare token request",
        "func": "node.warn ('Refreshing JWT token...');\n\nvar settings = {\n    apiRoot: \"https://doctor-at-home-backend.azurewebsites.net/api/dah\",\n}\nmsg.settings = settings;\n\n\nmsg.payload = {\n    username: 'default',\n    password: 'doctor_at_home'\n}\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 380,
        "y": 200,
        "wires": [
            [
                "a26580c1.060b2"
            ]
        ]
    },
    {
        "id": "a26580c1.060b2",
        "type": "http request",
        "z": "14e26bdf.84eb54",
        "name": "request JWT token",
        "method": "POST",
        "ret": "obj",
        "paytoqs": false,
        "url": "{{{settings.apiRoot}}}/auth/login",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 530,
        "y": 260,
        "wires": [
            [
                "70da0653.035f88"
            ]
        ]
    },
    {
        "id": "70da0653.035f88",
        "type": "function",
        "z": "14e26bdf.84eb54",
        "name": "store token and set HTTP Auth header",
        "func": "msg.backendToken = msg.payload.token;\n\n// next url\nmsg.headers = {}\nmsg.headers[\"Authorization\"] = \"Bearer \" + msg.backendToken;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 530,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "9ffeea17.9b5878",
        "type": "subflow:14e26bdf.84eb54",
        "z": "2863068b.c6cf2a",
        "name": "",
        "x": 320,
        "y": 160,
        "wires": [
            [
                "9ca6ccdb.9185a"
            ]
        ]
    },
    {
        "id": "512ce512.cf408c",
        "type": "switch",
        "z": "14e26bdf.84eb54",
        "name": "empty backendToken?",
        "property": "backendToken",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 140,
        "y": 240,
        "wires": [
            [
                "6305c76e.1d0788"
            ],
            [
                "70da0653.035f88"
            ]
        ]
    }
]